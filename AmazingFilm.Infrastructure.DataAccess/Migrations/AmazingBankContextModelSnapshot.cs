// <auto-generated />
using System;
using AmazingFilm.Infrastructure.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmazingBank.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(AmazingFilmContext))]
    partial class AmazingBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmazingBank.DomainModel.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("Amount");

                    b.Property<Guid?>("ClientId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AmazingBank.DomainModel.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("PhotoUrl");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AmazingBank.DomainModel.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AccountId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AmazingBank.Infrastructure.DataAccess.Contexts.Model.DbCurrency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnName("Currency");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("AmazingBank.DomainModel.Entities.Account", b =>
                {
                    b.HasOne("AmazingBank.DomainModel.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("AmazingBank.DomainModel.Entities.Document", b =>
                {
                    b.HasOne("AmazingBank.DomainModel.Entities.Account")
                        .WithMany("Documents")
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
